@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Pantalla Inicial";
}

<nav class="navbar navbar-expand-sm header">
    <div class="container-fluid">
        <img src="https://wp.uaslp.mx/informe/wp-content/uploads/sites/2/2024/04/UASLP.png" alt="Logo" style="max-width: 15%;">
        <div class="rounded-pill">
            <h4>@HttpContextAccessor.HttpContext.Session.GetString("Usuario")</h4>
            <form asp-controller="Home" asp-action="Logout" method="post">
                <button id="logoutButton" class="btn btn-outline-light">Cerrar sesión</button>
            </form>
        </div>
    </div>
</nav>
<div class="row" style="background-color:#004A98;">
    <div class="col"></div>

    <!--Gestión de corredores-->
    <div class="col">
        <div class="dropdown">
            <button type="button" class="btn dropdown-toggle" style="background-color:#004A98; color: white; width: max-content;" data-bs-toggle="dropdown" id="gestionCorredor" aria-expanded="false">
                Gestión de corredores
            </button>
            <ul class="dropdown-menu" aria-labelledby="gestionCorredor">
                <li><a class="dropdown-item" href="@Url.Action("Crear_Corredor", "Home")">Nuevo Corredor</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Eliminar_Corredor", "Home")">Eliminar Corredor</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Modificar_Corredor", "Home")">Modificar Corredor</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Importar_Corredores", "Home")">Importar corredores</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Importar_tiempos", "Home")">Importar tiempos</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Exportar_corredor", "Home")">Exportar Corredor</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Reporte_corredor", "Home")">Reporte de Corredor</a></li>
            </ul>
        </div>
    </div>

    <!--Gestión de carreras-->
    <div class="col">
        <div class="dropdown">
            <button type="button" class="btn dropdown-toggle" style="background-color:#004A98; color: white; width: max-content;" data-bs-toggle="dropdown" id="gestionCarreras" aria-expanded="false">
                Gestión de carreras
            </button>
            <ul class="dropdown-menu" aria-labelledby="gestionCarreras">
                <li><a class="dropdown-item" href="@Url.Action("Crear_Carrera", "Home")">Nueva Carrera</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Eliminar_Carrera", "Home")">Eliminar Carrera</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Editar_Carrera", "Home")">Editar Carrera</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Reporte_carrera", "Home")">Generar reporte de carrera</a></li>
            </ul>
        </div>
    </div>

    <div class="col">
        <button type="button" class="btn  dropdown-toggle" style="background-color:#004A98 ;color: white;width:max-content;" data-bs-toggle="dropdown" id="gestionAdminsitradores" aria-expanded="false">Gestión de Administradores</button>
        <ul class="dropdown-menu" aria-labelledby="gestionAdminsitradores">
            <li><a class="dropdown-item" href="@Url.Action("Alta_administrador", "Home")">Nuevo Administrador</a></li>
            <li><a class="dropdown-item" href="@Url.Action("Baja_adminsitrador", "Home")">Eliminar Administrador</a></li>
        </ul>
    </div>
    <div class="col">
        <button class="btn" style="background-color:#004A98; color: white; width: max-content;">
            Exportar resultados
        </button>
    </div>
    <div class="col"></div>
</div>


<br>

<div>
    <form id="searchForm" method="post" asp-action="BuscarCorredores">
        <div class="row align-items-center">
            <div class="col-1"></div> <!-- Espaciado a la izquierda -->
            <!-- Nombre del Corredor -->
            <div class="col">
                <label for="nombreCorredor" class="form-label"><strong>Nombre del Corredor:</strong></label>
                <input type="text" name="nombreCorredor" id="nombreCorredor" class="form-control"
                       value="@ViewBag.NombreBuscado" placeholder="Nombre del corredor" />
            </div>

            <!-- Año -->
            <div class="col">
                <label for="yearCarrera" class="form-label"><strong>Año:</strong></label>
                <select id="yearCarrera" name="yearCarrera" class="form-control">
                    <option value="">Seleccione un año</option>
                    @foreach (var anio in ViewBag.Anios)
                    {
                        var isSelected = Convert.ToString(ViewBag.SelectedYear) == Convert.ToString(anio) ? "selected" : "";
                        <option value="@anio" selected="@isSelected">@anio</option>
                    }
                </select>
            </div>

            <!-- Edición -->
            <div class="col">
                <label for="ediCarrera" class="form-label"><strong>Edición:</strong></label>
                <select id="ediCarrera" name="ediCarrera" class="form-control">
                    <option value="">Seleccione una edición</option>
                    @if (ViewBag.SelectedEdition != null)
                    {
                        <option value="@ViewBag.SelectedEdition" selected>@ViewBag.SelectedEdition</option>
                    }
                </select>
            </div>

            <!-- Categoría -->
            <div class="col">
                <label for="categoria" class="form-label"><strong>Categoría:</strong></label>
                <select id="categoria" name="categoria" class="form-control">
                    <option value="">Seleccione una categoría</option>
                    @if (!string.IsNullOrEmpty(ViewBag.SelectedCategory))
                    {
                        <option value="@ViewBag.SelectedCategory" selected>@ViewBag.SelectedCategory</option>
                    }
                </select>
            </div>

            <!-- Botón de Búsqueda -->
            <div class="col">
                <button type="submit" class="btn btn-primary">Buscar</button>
            </div>
        </div>
    </form>


</div>
@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}


<div class="row">
    <!-- Tabla de resultados (ocupa la mitad de la pantalla) -->
   
        <div id="resultTable" class="mt-4" style=" margin: auto;">

            <table class="table table-primary table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Posición</th>
                        <th>Número</th>
                        <th>Nombre</th>
                        <th>T1</th>
                        <th>T2</th>
                        <th>T3</th>
                        <th>Tiempo Total</th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                @if (ViewBag.ResultadosBusqueda != null && ViewBag.ResultadosBusqueda.Count > 0)
                {
                    <tbody class="table-group-divider">
                        @foreach (var corredor in ViewBag.ResultadosBusqueda)
                        {
                           
                            <tr>
                                <td>@corredor["Posicion"]</td>
                                <td>@corredor["NumCorredor"]</td>
                                <td>@corredor["Nombre"]</td>
                                <td>@corredor["T1"]</td>
                                <td>@corredor["T2"]</td>
                                <td>@corredor["T3"]</td>
                                <td>@corredor["T4"]</td>
                            <td>
                                <button type="button" class="btn btn-danger eliminar-corredor"
                                        data-year="@ViewBag.SelectedYear"
                                        data-edition="@ViewBag.SelectedEdition"
                                        data-category="@ViewBag.SelectedCategory"
                                        data-numcorredor="@corredor["NumCorredor"]">
                                    Eliminar
                                </button>


                                <button type="button" class="btn btn-warning modificar-corredor"
                                        data-year="@ViewBag.SelectedYear"
                                        data-edition="@ViewBag.SelectedEdition"
                                        data-category="@ViewBag.SelectedCategory"
                                        data-numcorredor="@corredor["NumCorredor"]">
                                    Modificar
                                </button>
                            </td>
                            </tr>
                            
                            
                        }
                        </tbody>
                }
                else if (ViewBag.ResultadosBusqueda != null)
                {
                    <p>No se encontraron resultados para los criterios de búsqueda.</p>
                }
            </table>

        </div>
    </div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>    

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    //agregado
    document.querySelector("#logoutButton").addEventListener("click", function () {
        fetch('/Home/Logout', { method: 'POST' })
            .then(response => {
                window.location.replace("/Home/Index"); // Redirige sin guardar en el historial
            });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const yearSelect = document.getElementById("yearCarrera");
        const ediSelect = document.getElementById("ediCarrera");
        const catSelect = document.getElementById("categoria");
        const nameInput = document.getElementById("nombreCorredor");

        // 🔹 Restaurar valores guardados en localStorage después de una búsqueda
        yearSelect.value = localStorage.getItem("yearCarrera") || "";
        ediSelect.value = localStorage.getItem("ediCarrera") || "";
        catSelect.value = localStorage.getItem("categoria") || "";
        nameInput.value = localStorage.getItem("nombreCorredor") || "";

        // 🔹 Guardar valores en localStorage antes de enviar el formulario
        document.getElementById("searchForm").addEventListener("submit", function () {
            localStorage.setItem("yearCarrera", yearSelect.value);
            localStorage.setItem("ediCarrera", ediSelect.value);
            localStorage.setItem("categoria", catSelect.value);
            localStorage.setItem("nombreCorredor", nameInput.value);
        });

        // 🔹 Función para cargar ediciones cuando se selecciona un año
        function cargarEdiciones() {
            let year = yearSelect.value;
            ediSelect.innerHTML = '<option value="">Seleccione una edición</option>';
            catSelect.innerHTML = '<option value="">Seleccione una categoría</option>'; // Resetear categorías

            if (year) {
                fetch(`/Home/CargarEdiciones?yearCarrera=${year}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(edi => {
                            let selected = edi == localStorage.getItem("ediCarrera") ? "selected" : "";
                            ediSelect.innerHTML += `<option value="${edi}" ${selected}>${edi}</option>`;
                        });

                        // Si hay ediciones cargadas y había una selección previa, dispara el evento de cambio
                        if (localStorage.getItem("ediCarrera")) {
                            ediSelect.value = localStorage.getItem("ediCarrera");
                            cargarCategorias();
                        }
                    })
                    .catch(error => console.error("Error al cargar ediciones:", error));
            }
        }

        // 🔹 Función para cargar categorías cuando se selecciona una edición
        function cargarCategorias() {
            let year = yearSelect.value;
            let edi = ediSelect.value;
            catSelect.innerHTML = '<option value="">Seleccione una categoría</option>'; // Resetear categorías

            if (year && edi) {
                fetch(`/Home/CargarCategorias?yearCarrera=${year}&ediCarrera=${edi}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(cat => {
                            let selected = cat === localStorage.getItem("categoria") ? "selected" : "";
                            catSelect.innerHTML += `<option value="${cat}" ${selected}>${cat}</option>`;
                        });

                        // Si había una categoría seleccionada, restáurala
                        if (localStorage.getItem("categoria")) {
                            catSelect.value = localStorage.getItem("categoria");
                        }
                    })
                    .catch(error => console.error("Error al cargar categorías:", error));
            }
        }

        // 🔹 Eventos para cargar ediciones y categorías dinámicamente
        yearSelect.addEventListener("change", cargarEdiciones);
        ediSelect.addEventListener("change", cargarCategorias);

        // 🔹 Disparar eventos después de cargar la página para restaurar datos
        if (yearSelect.value) {
            cargarEdiciones();
        }
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".eliminar-corredor").forEach(button => {
            button.addEventListener("click", function () {
                let yearCarrera = this.getAttribute("data-year");
                let ediCarrera = this.getAttribute("data-edition");
                let categoria = this.getAttribute("data-category");
                let numCorredor = this.getAttribute("data-numcorredor");

                if (!yearCarrera || !ediCarrera || !categoria || !numCorredor) {
                    alert("Error: No se encontraron los datos del corredor.");
                    return;
                }

                // Redirigir a la pantalla de eliminar con los datos en la URL
                window.location.href = `/Home/Eliminar_Corredor?yearCarrera=${yearCarrera}&ediCarrera=${ediCarrera}&categoria=${categoria}&numCorredor=${numCorredor}`;
            });
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".modificar-corredor").forEach(button => {
            button.addEventListener("click", function () {
                const year = this.getAttribute("data-year");
                const edition = this.getAttribute("data-edition");
                const category = this.getAttribute("data-category");
                const numCorredor = this.getAttribute("data-numcorredor");

                const url = `/Home/Modificar_Corredor?year=${year}&edition=${edition}&category=${category}&numcorredor=${numCorredor}`;
                window.location.href = url;
            });
        });
    });
</script>